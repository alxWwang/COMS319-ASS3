{"ast":null,"code":"var _jsxFileName = \"/Users/wang/ISU/COM S 319/ass3/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [test, setTest] = useState([]);\n  let getFromServer = () => {\n    fetch('http://localhost:8081/').then(response => {\n      if (!response.ok) {\n        throw new Error('err: ${response.status}');\n      }\n      response.json().then(data => {\n        console.log(data);\n        let tmp = [];\n        for (let i of data) {\n          tmp.push(i['title']);\n        }\n        setTest(tmp);\n      });\n    });\n  };\n  let funfunction = i => {\n    console.log(test[i]);\n    return test[i];\n  };\n  let cardArray = () => {\n    console.log(test);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: funfunction(0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getFromServer,\n      children: \"Send Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"YS5faIzxrpYSRPJupAQ4iKoAHaM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","test","setTest","getFromServer","fetch","then","response","ok","Error","json","data","console","log","tmp","i","push","funfunction","cardArray","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/wang/ISU/COM S 319/ass3/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App(){\n\n    const [test, setTest] = useState([]);\n\n    let getFromServer = () =>{\n        fetch('http://localhost:8081/').then(response =>{\n            if (!response.ok){\n                throw new Error('err: ${response.status}')\n            }\n            response.json().then(data=>{\n                console.log(data)\n                let tmp = [];\n                for (let i of data){\n                    tmp.push(i['title'])\n                } \n                setTest(tmp)\n            })\n        })\n    }\n    let funfunction = (i)=>{\n        console.log(test[i])\n        return (test[i])\n    }\n\n    let cardArray = () =>{\n        console.log(test)\n    }\n\n    return(\n        <div>\n            <h1>{funfunction(0)}</h1>\n            <button onClick={getFromServer} >Send Data</button> \n        </div>\n    )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EAEV,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpC,IAAIO,aAAa,GAAGA,CAAA,KAAK;IACrBC,KAAK,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAG;MAC5C,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAC;QACb,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC9C;MACAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACJ,IAAI,CAACK,IAAI,IAAE;QACvBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,IAAIG,GAAG,GAAG,EAAE;QACZ,KAAK,IAAIC,CAAC,IAAIJ,IAAI,EAAC;UACfG,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC,OAAO,CAAC,CAAC;QACxB;QACAZ,OAAO,CAACW,GAAG,CAAC;MAChB,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD,IAAIG,WAAW,GAAIF,CAAC,IAAG;IACnBH,OAAO,CAACC,GAAG,CAACX,IAAI,CAACa,CAAC,CAAC,CAAC;IACpB,OAAQb,IAAI,CAACa,CAAC,CAAC;EACnB,CAAC;EAED,IAAIG,SAAS,GAAGA,CAAA,KAAK;IACjBN,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;EACrB,CAAC;EAED,oBACIH,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAKF,WAAW,CAAC,CAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBxB,OAAA;MAAQyB,OAAO,EAAEpB,aAAc;MAAAe,QAAA,EAAE;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEd;AAACtB,EAAA,CAlCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAoCZ,eAAeA,GAAG;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}